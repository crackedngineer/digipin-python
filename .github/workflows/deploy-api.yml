name: Build and Push Docker Image

on:
    push:
        branches:
            - master
        paths:
            - "api/**"
    workflow_dispatch:

env:
    REGISTRY: docker.io
    DOCKERHUB_USERNAME: subhomoy
    IMAGE_NAME: digipin-api

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ env.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Generate timestamp
              id: timestamp
              run: echo "timestamp=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

            - name: Set Dockerfile and tags based on branch
              id: docker-config
              run: |
                  echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
                  echo "tags=${{ env.REGISTRY }}/${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME }}:latest,${{ env.REGISTRY }}/${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME }}:${{ steps.timestamp.outputs.timestamp }}" >> $GITHUB_OUTPUT

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ${{ steps.docker-config.outputs.dockerfile }}
                  push: true
                  tags: ${{ steps.docker-config.outputs.tags }}
                  # cache-from: type=registry,ref=${{ env.REGISTRY }}/${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME }}:buildcache
                  # cache-to: type=registry,ref=${{ env.REGISTRY }}/${{env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME }}:buildcache,mode=max

            - name: Print image details
              run: |
                  echo "Built and pushed images:"
                  echo "Dockerfile: ${{ steps.docker-config.outputs.dockerfile }}"
                  echo "Tags: ${{ steps.docker-config.outputs.tags }}"
